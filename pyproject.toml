[build-system]
requires = ["setuptools>=65", "setuptools_scm[toml]>=7.0"]
build-backend = "setuptools.build_meta"

[project]
name = "rt"
description = "Python interface to Request Tracker API"
readme = "README.rst"
license = { text = "GNU General Public License v3 (GPLv3)" }
authors = [{ name = "Georges Toth", email = "georges.toth@govcert.etat.lu" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: POSIX",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">= 3.8"
dependencies = [
    "requests",
    "httpx",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/python-rt/python-rt"
Documentation = "https://python-rt.readthedocs.io/"
Source = "https://github.com/python-rt/python-rt"
Tracker = "https://github.com/python-rt/python-rt/issues"
Changelog = "https://github.com/python-rt/python-rt/blob/master/CHANGELOG.md"

[project.optional-dependencies]
docs = [
    "sphinx",
    "sphinx-autodoc-typehints",
    "sphinx-rtd-theme",
    "furo",
    "sphinx-copybutton",
]
dev = [
    "pycodestyle",
    "pylint",
    "mypy",
    "flake8",
    "flake8-bandit",
    "flake8-comprehensions",
    "flake8-docstrings",
    "pep8-naming",
    "types-requests",
    "codespell",
    "ruff",
]
test = [
    "pytest",
    "pytest-asyncio",
    "coverage",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
exclude = ["tests"]
namespaces = false

[tool.pycodestyle]
filename = "rt/rt.py"
ignore = "E501, W503, E124, E126"

[tool.setuptools_scm]

[tool.mypy]
show_error_codes = true
show_error_context = true
show_column_numbers = true
ignore_missing_imports = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
disallow_untyped_calls = false
warn_no_return = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_optional = true
check_untyped_defs = false

files = [
    "rt/**/*.py"
]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests"
]

[tool.ruff]
line-length = 240
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
#    "D",  # pydocstyle
#    "N",  # pep8-naming
    "UP",  # pyupgrade
    "YTT",  # flake8-2020
    "ANN",  # flake8-annotations
    "ASYNC",  # flake8-async
    "S",  # flake8-bandit
    "BLE",  # flake8-blind-except
    "B",  # flake8-bugbear
    "A",  # flake8-builtins
    "COM",  # flake8-commas
    "C4",  # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "EM103",  # flake8-errmsg - dot-format-in-exception
    "EXE",  # flake8-executable
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "G",  # flake8-logging-format
    "INP",  # flake8-no-pep420
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PYI",  # flake8-pyi
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SLOT",  # flake8-slots
#    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "PTH",  # flake8-use-pathlib
    "TD",  # flake8-todos
    "FIX",  # flake8-fixme
    "ERA",  # eradicate
    "PL",  # Pylint
    "PLC",  # Convention
    "PLE",  # Error
    "PLR",  # Refactor
    "PLW",  # Warning
    "TRY200",  # reraise-no-cause
    "FLY",  # flynt
#    "PERF",  # Perflint
    "RUF013",  # implicit-optional
]
unfixable = ['ERA001']
extend-select = ['Q', 'RUF100', 'C90']
flake8-quotes = { inline-quotes = 'single', multiline-quotes = 'single' }
ignore = [
    "C901",  # too complex
    "E501",  # line too long
    "B008",  # do not perform function call in argument defaults
    "ANN101",  # missing-type-self
    "ANN401",  # any-type
    "ANN002",  # missing-type-args
    "ANN003",  # missing-type-kwargs
    "ANN102",  # missing-type-cls
    "PLR0913",  # Too many arguments to function call
    "PLR0915",  # Too many statements
    "PLR2004",  # Magic value used in comparison
    "PLW0603",  # Using the global statement
    "PLR0912",  # Too many branches
    "UP035",  # deprecated-import
]
